basePath: /api
definitions:
  model.User:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  request.CreateUserRequest:
    properties:
      name:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - name
    type: object
  request.UpdateUserRequest:
    properties:
      id:
        type: integer
      name:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - id
    - name
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  description: A Tag service API in Go using Gin framework
  title: Tag Service API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get Occupations based on agent and customer details
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Occupations
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User User details
      parameters:
      - description: request.CreateUserRequest details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create User User
      tags:
      - User
  /users/{userId}:
    delete:
      consumes:
      - application/json
      description: Return the user whoes userId value mathes id.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Single User by id.
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns the user whose userID matches the provided ID.
      parameters:
      - description: User ID to fetch
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Single User by ID
      tags:
      - User
  /users/userId}:
    patch:
      consumes:
      - application/json
      description: Get products based on agent and customer details
      parameters:
      - description: request.UpdateUserRequest details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update User
      tags:
      - User
swagger: "2.0"
